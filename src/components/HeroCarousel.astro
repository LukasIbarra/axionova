---
import EmblaCarousel from 'embla-carousel';
import Autoplay from 'embla-carousel-autoplay';


const heroSlides = [
  {
    id: 1,
    title: "Revolucionando la",
    subtitle: "Minería del Futuro",
    description: "Tecnología de vanguardia que transforma la industria minera con innovación, seguridad y sostenibilidad.",
    image: "https://images.unsplash.com/photo-1686945127170-ae15deda7bcc?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxtb2Rlcm4lMjBtaW5pbmclMjB0ZWNobm9sb2d5fGVufDF8fHx8MTc1NzY0MjM3MHww&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral",
    stats: [
      { icon: "shield", value: "99.9%", label: "Seguridad" },
      { icon: "zap", value: "+300%", label: "Eficiencia" }
    ]
  },
  {
    id: 2,
    title: "Automatización",
    subtitle: "Inteligente Total",
    description: "IA avanzada y robótica que optimiza cada proceso, reduciendo costos y maximizando la productividad.",
    image: "https://images.unsplash.com/photo-1738918897772-0ba101be25c8?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxpbmR1c3RyaWFsJTIwZXF1aXBtZW50JTIwYXV0b21hdGlvbnxlbnwxfHx8fDE3NTc2NDIzNzB8MA&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral",
    stats: [
      { icon: "award", value: "50+", label: "Proyectos" },
      { icon: "zap", value: "24/7", label: "Operación" }
    ]
  },
  {
    id: 3,
    title: "Seguridad y",
    subtitle: "Sostenibilidad Total",
    description: "Protocolos de clase mundial que garantizan cero accidentes y mínimo impacto ambiental.",
    image: "https://images.unsplash.com/photo-1691068343106-159ec5b344e9?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxtaW5pbmclMjBzYWZldHklMjB3b3JrZXJzfGVufDF8fHx8MTc1NzUzNDQxM3ww&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral",
    stats: [
      { icon: "shield", value: "0", label: "Accidentes" },
      { icon: "award", value: "ISO", label: "Certificado" }
    ]
  }
];

// Variables para controlar el slide actual y autoplay
let currentSlide = 0;
let intervalId = null;

// Función para cambiar al siguiente slide
function nextSlide() {
  currentSlide = (currentSlide + 1) % heroSlides.length;
  updateSlide();
}

// Función para cambiar al slide anterior
function prevSlide() {
  currentSlide = (currentSlide - 1 + heroSlides.length) % heroSlides.length;
  updateSlide();
}

// Función para ir a un slide específico
function goToSlide(index) {
  currentSlide = index;
  updateSlide();
}

// Actualiza la visibilidad de los slides y los indicadores
function updateSlide() {
  const slides = document.querySelectorAll('.slide');
  const indicators = document.querySelectorAll('.indicator');
  slides.forEach((slide, index) => {
    slide.style.opacity = index === currentSlide ? '1' : '0';
    slide.style.zIndex = index === currentSlide ? '10' : '0';
  });
  indicators.forEach((indicator, index) => {
    indicator.classList.toggle('bg-emerald-400', index === currentSlide);
    indicator.classList.toggle('scale-125', index === currentSlide);
    indicator.classList.toggle('bg-white/30', index !== currentSlide);
  });
}

// Inicia el autoplay
function startAutoplay() {
  intervalId = setInterval(nextSlide, 6000);
}

// Detiene el autoplay
function stopAutoplay() {
  clearInterval(intervalId);
  intervalId = null;
}

<!-- Move client-side logic to a script tag that runs on load -->
<script is:inline>
  // Variables para controlar el slide actual y autoplay
  let currentSlide = 0;
  let intervalId = null;

  function nextSlide() {
    currentSlide = (currentSlide + 1) % heroSlides.length;
    updateSlide();
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + heroSlides.length) % heroSlides.length;
    updateSlide();
  }

  function goToSlide(index) {
    currentSlide = index;
    updateSlide();
  }

  function updateSlide() {
    const slides = document.querySelectorAll('.slide');
    const indicators = document.querySelectorAll('.indicator');
    slides.forEach((slide, index) => {
      slide.style.opacity = index === currentSlide ? '1' : '0';
      slide.style.zIndex = index === currentSlide ? '10' : '0';
    });
    indicators.forEach((indicator, index) => {
      indicator.classList.toggle('bg-emerald-400', index === currentSlide);
      indicator.classList.toggle('scale-125', index === currentSlide);
      indicator.classList.toggle('bg-white/30', index !== currentSlide);
    });
  }

  function startAutoplay() {
    intervalId = setInterval(nextSlide, 6000);
  }

  function stopAutoplay() {
    clearInterval(intervalId);
    intervalId = null;
  }

  window.addEventListener('DOMContentLoaded', () => {
    updateSlide();
    startAutoplay();

    document.getElementById('nextBtn').addEventListener('click', () => {
      nextSlide();
      stopAutoplay();
    });
    document.getElementById('prevBtn').addEventListener('click', () => {
      prevSlide();
      stopAutoplay();
    });
    document.querySelectorAll('.indicator').forEach((btn, index) => {
      btn.addEventListener('click', () => {
        goToSlide(index);
        stopAutoplay();
      });
    });
  });
</script>
---

<style>
  .slide {
    transition: opacity 1.2s ease-in-out;
    position: absolute;
    inset: 0;
    background-size: cover;
    background-position: center;
  }
  .hidden {
    opacity: 0;
    z-index: 0;
  }
  .visible {
    opacity: 1;
    z-index: 10;
  }
</style>

<section class="relative h-screen overflow-hidden bg-black">
  <!-- Slides -->
  {heroSlides.map((slide, index) => (
    <div
      class="slide"
      style={`background-image: url('${slide.image}'); opacity: 0; z-index: 0;`}
      aria-hidden={index !== currentSlide}
      key={slide.id}
    >
      <div class="absolute inset-0 bg-black/60"></div>
      <div class="relative z-20 h-full flex items-center">
        <div class="container mx-auto px-6">
          <div class="max-w-4xl text-white">
            <div class="inline-flex items-center space-x-2 bg-emerald-500/10 border border-emerald-500/20 rounded-full px-4 py-2 mb-6 animate-pulse">
              <div class="w-2 h-2 bg-emerald-400 rounded-full"></div>
              <span class="text-emerald-400 text-sm font-medium">Tecnología Avanzada 2024</span>
            </div>
            <h1 class="text-6xl md:text-8xl font-bold mb-4 leading-tight">
              <span class="block">{slide.title}</span>
              <span class="block bg-gradient-to-r from-orange-400 to-orange-600 bg-clip-text text-transparent">{slide.subtitle}</span>
            </h1>
            <p class="text-xl text-gray-300 mb-8 max-w-2xl">{slide.description}</p>
            <div class="flex flex-wrap gap-6 mb-10">
              {slide.stats.map((stat) => (
                <div class="flex items-center space-x-3 bg-black/30 backdrop-blur-sm rounded-lg px-4 py-2 border border-gray-700">
                  <div class="text-emerald-400">
                    <!-- Aquí se pueden agregar iconos SVG según stat.icon -->
                    <span>{stat.icon}</span>
                  </div>
                  <div>
                    <div class="text-white font-bold">{stat.value}</div>
                    <div class="text-gray-400 text-sm">{stat.label}</div>
                  </div>
                </div>
              ))}
            </div>
            <div class="flex flex-col sm:flex-row gap-4">
              <button id="exploreBtn" class="bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white border-0 px-8 py-4 group rounded-lg font-semibold text-lg flex items-center justify-center">
                Explorar Soluciones
                <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                </svg>
              </button>
              <button id="demoBtn" class="border border-emerald-500 text-emerald-400 hover:bg-emerald-500/10 hover:border-emerald-400 px-8 py-4 group rounded-lg font-semibold text-lg flex items-center justify-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-6.518-3.75v7.5l6.518-3.75z"></path>
                </svg>
                Ver Demo
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  ))}

  <!-- Botones de navegación -->
  <button id="prevBtn" aria-label="Anterior" class="absolute left-8 top-1/2 transform -translate-y-1/2 z-30 w-12 h-12 bg-black/50 backdrop-blur-sm border border-gray-700 rounded-full flex items-center justify-center text-white hover:bg-black/70 hover:border-emerald-500 transition-all duration-300 group">
    <svg class="w-6 h-6 group-hover:text-emerald-400 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
    </svg>
  </button>
  <button id="nextBtn" aria-label="Siguiente" class="absolute right-8 top-1/2 transform -translate-y-1/2 z-30 w-12 h-12 bg-black/50 backdrop-blur-sm border border-gray-700 rounded-full flex items-center justify-center text-white hover:bg-black/70 hover:border-emerald-500 transition-all duration-300 group">
    <svg class="w-6 h-6 group-hover:text-emerald-400 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
    </svg>
  </button>

  <!-- Indicadores de slide -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-30 flex space-x-3">
    {heroSlides.map((_, index) => (
      <button class="indicator w-3 h-3 rounded-full transition-all duration-300 bg-white/30 hover:bg-white/50" aria-label={`Ir al slide ${index + 1}`} />
    ))}
  </div>

  <!-- Barra de progreso -->
  <div class="absolute bottom-0 left-0 w-full h-1 bg-gray-800">
    <div id="progressBar" class="h-full bg-gradient-to-r from-orange-500 to-emerald-500" style="width: 0%; transition: width 6s linear;"></div>
  </div>

  <!-- Indicador de scroll -->
  <div class="absolute bottom-16 left-1/2 transform -translate-x-1/2 z-20">
    <div class="w-6 h-10 border-2 border-emerald-400 rounded-full flex justify-center">
      <div class="w-1 h-3 bg-emerald-400 rounded-full mt-2 animate-bounce"></div>
    </div>
  </div>
</section>
