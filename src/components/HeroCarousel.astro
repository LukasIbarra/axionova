---
interface Metric { value: string; label: string; color?: string; icon?: string; }
interface Slide {
  id: number;
  eyebrow?: string;
  eyebrowClass?: string;
  title1: string;
  title2: string;
  desc: string;
  img: string;
  ctaText?: string;
  ctaHref?: string;
  align?: "center" | "left" | "right";
  metrics?: Metric[];
  icon?: string;
}

export interface Props { heroSlides?: Slide[]; }

const { heroSlides } = Astro.props as Props;

const defaultSlides: Slide[] = [
  {
    id: 1,
    eyebrow: "L√≠der en Innovaci√≥n Minera 2024",
    eyebrowClass: "text-emerald-400 font-medium bg-emerald-500/10 border border-emerald-500/20",
    title1: "El futuro de la",
    title2: "miner√≠a es HOY",
    desc: "Revolucionamos la industria con tecnolog√≠a de vanguardia que maximiza la eficiencia, garantiza la seguridad y protege el medio ambiente.",
    img: "./servi4.jpg",
    ctaText: "Cotizar",
    ctaHref: "#contacto",
    align: "center",
  },
  {
    id: 2,
    eyebrow: "L√≠deres de la industria",
    eyebrowClass: "text-orange-400 font-medium bg-orange-500/10 border border-orange-500/20",
    title1: "Resultados que",
    title2: "hablan por s√≠ mismos",
    desc: "M√°s de 15 a√±os liderando la transformaci√≥n digital de la miner√≠a con resultados comprobados y reconocimiento mundial.",
    img: "./conte.jpg",
    ctaText: "Solicitar Consultor√≠a",
    ctaHref: "#contacto",
    align: "left",
    metrics: [
      { value: "300%", label: "Aumento Eficiencia", color: "bg-orange-500/20", icon: "fa-solid fa-arrow-trend-up" },
      { value: "99.9%", label: "√çndice Seguridad", color: "bg-emerald-500/20", icon: "fa-solid fa-shield-halved" },
      { value: "50+", label: "Proyectos Exitosos", color: "bg-blue-500/20", icon: "fa-solid fa-diagram-project" },
      { value: "12", label: "Pa√≠ses Activos", color: "bg-emerald-500/20", icon: "fa-solid fa-earth-americas" },
    ],
  },
  {
    id: 3,
    eyebrow: "Consultor√≠a Gratuita",
    eyebrowClass: "text-emerald-400 font-medium bg-emerald-500/10 border border-emerald-500/20",
    title1: "¬øListo para",
    title2: "Transformar tu Operaci√≥n?",
    desc: "Obt√©n una consultor√≠a gratuita y descubre c√≥mo nuestras soluciones pueden revolucionar tu empresa minera.",
    img: "./conte4.jpg",
    ctaText: "Contactar",
    ctaHref: "#contacto",
    align: "right",
  },
];

const slides: Slide[] = (heroSlides?.length ? heroSlides : defaultSlides);
---

<section
  id="hero"
  class="relative overflow-hidden isolate"
  style="height: 100vh"
  aria-label="Carrusel principal"
>
  <!-- Contenedor de slides -->
  <div class="hero-slides-container h-full relative">
    {slides.map((s, i) => (
      <article
        class={`hero-slide absolute inset-0 w-full h-full transition-all duration-1000 ease-out ${i === 0 ? 'is-active opacity-100 z-10' : 'opacity-0 z-0'}`}
        data-slide-index={i}
        role="group"
        aria-roledescription="slide"
        aria-label={`${i + 1} de ${slides.length}`}
      >
        <!-- Imagen con overlay oscuro -->
        <div class="absolute inset-0 overflow-hidden">
          <img
            src={s.img}
            alt={s.title1 + " " + s.title2}
            class="w-full h-full object-cover scale-110 transition-transform duration-[12000ms] ease-out"
            loading={i === 0 ? "eager" : "lazy"}
            decoding="async"
            fetchpriority={i === 0 ? "high" : "auto"}
            sizes="100vw"
          />
          <div class="absolute inset-0 bg-gradient-to-b from-black/50 via-black/60 to-black/70"></div>
          <div class="absolute inset-0 bg-gradient-to-r from-black/30 via-transparent to-black/30"></div>
        </div>

        <!-- Contenido del slide -->
        {(() => {
          const isLeft = s.align === "left";
          const isRight = s.align === "right";
          const padEdge = isLeft ? "lg:pl-28" : isRight ? "lg:pr-28" : "";

          // Slide 3 con formulario a la izquierda
          if (s.id === 3) {
            return (
              <div class={`relative z-20 flex h-full items-center justify-center px-8 md:px-16 lg:px-24 ${padEdge}`}>
                {/* ‚¨áÔ∏è 2 columnas en desktop */}
                <div class="w-full lg:flex lg:items-center lg:gap-6">
                  
                  {/* Izquierda: mitad y la caja centrada */}
                  <div class="hidden lg:flex lg:w-1/2 justify-center">
                    <aside class="hero-contact-form w-full max-w-md">
                      <form class="space-y-4 bg-white/10 backdrop-blur-xl border border-white/20 rounded-2xl p-6 shadow-2xl">
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                          <div class="form-group">
                            <input type="text" placeholder="Nombre"
                              class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/60 focus:outline-none focus:border-emerald-400 focus:ring-2 focus:ring-emerald-400/50 transition-all duration-300"
                              required />
                          </div>
                          <div class="form-group">
                            <input type="email" placeholder="Email"
                              class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/60 focus:outline-none focus:border-emerald-400 focus:ring-2 focus:ring-emerald-400/50 transition-all duration-300"
                              required />
                          </div>
                        </div>
                        <div class="form-group">
                          <input type="tel" placeholder="Tel√©fono"
                            class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/60 focus:outline-none focus:border-emerald-400 focus:ring-2 focus:ring-emerald-400/50 transition-all duration-300"
                            required />
                        </div>
                        <button type="submit"
                          class="w-full btn-premium-orange text-white font-bold py-4 px-6 rounded-lg transition-all duration-300 shadow-lg hover:shadow-2xl hover:scale-[1.02] flex items-center justify-center gap-2 group">
                          <span>Solicitar Consultor√≠a Gratuita</span>
                          <svg class="w-5 h-5 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                          </svg>
                        </button>
                        <p class="text-xs text-white/70 text-center">
                          <i class="fa-solid fa-lock mr-1"></i> Tus datos est√°n protegidos. Respuesta en menos de 24 horas.
                        </p>
                      </form>
                    </aside>
                  </div>

                  {/* Derecha: mitad con el texto */}
                  <div class="w-full lg:w-1/2 max-w-3xl text-white space-y-6 mx-auto text-center lg:text-left lg:mx-0">
                    {s.eyebrow && (
                      <span class={`hero-eyebrow inline-block px-4 py-2 rounded-full text-sm ${s.eyebrowClass ?? ""}`}>
                        {s.eyebrow}
                      </span>
                    )}
                    <h1 class="hero-title text-4xl sm:text-5xl lg:text-6xl font-extrabold leading-tight">
                      {s.title1}{" "}
                      <span class="bg-gradient-to-r from-orange-500 to-orange-400 bg-clip-text text-transparent">
                        {s.title2}
                      </span>
                    </h1>
                    <p class="hero-desc text-lg sm:text-xl text-white/90">{s.desc}</p>

                    {/* Si usas CTAs solo m√≥vil, mantenlas aqu√≠ */}
                    <div class="hero-cta flex flex-wrap gap-4 justify-center lg:hidden">
                      <a href={s.ctaHref ?? "#"} class="btn-premium btn-premium-orange transition-smooth shadow-premium shadow-premium-hover">
                        {s.ctaText ?? "Contactar"}
                      </a>
                      <a href="/servicios" class="btn-premium btn-premium-white transition-smooth shadow-premium shadow-premium-hover">
                        Explorar Servicios
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            );
          }

          // üëâ Slide 2: texto centrado en mitad izquierda (alineado a la izquierda) y m√©tricas centradas en mitad derecha
          if (s.id === 2) {
            return (
              <div class={`relative z-20 flex h-full items-center justify-center px-8 md:px-16 lg:px-24 ${padEdge}`}>
                <div class="w-full items-center lg:grid lg:grid-cols-2 gap-8 lg:gap-12">
                  
                  {/* Izquierda: contenedor centrado; texto alineado a la izquierda */}
                  <div class="flex items-center justify-center">
                    <div class="max-w-3xl w-full text-white space-y-6 mx-auto lg:mx-0 text-left">
                      {s.eyebrow && (
                        <span class={`hero-eyebrow inline-block px-4 py-2 rounded-full text-sm ${s.eyebrowClass ?? ""}`}>
                          {s.eyebrow}
                        </span>
                      )}
                      <h1 class="hero-title text-4xl sm:text-5xl lg:text-6xl font-extrabold leading-tight">
                        {s.title1}{" "}
                        <span class="bg-gradient-to-r from-orange-500 to-orange-400 bg-clip-text text-transparent">
                          {s.title2}
                        </span>
                      </h1>
                      <p class="hero-desc text-lg sm:text-xl text-white/90">{s.desc}</p>

                      {s.ctaText && (
                        <div class="hero-cta flex flex-wrap gap-4 justify-start">
                          <a href={s.ctaHref ?? "#"} class="btn-premium btn-premium-orange transition-smooth shadow-premium shadow-premium-hover">
                            {s.ctaText}
                          </a>
                          <a href="/servicios" class="btn-premium btn-premium-white transition-smooth shadow-premium shadow-premium-hover">
                            Explorar Servicios
                          </a>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* Derecha: m√©tricas centradas en su mitad */}
                  {s.metrics && (
                    <aside class="hero-metrics hidden md:flex items-center justify-center">
                      <div class="grid grid-cols-2 gap-3 lg:gap-4 w-[min(36rem,40vw)]">
                        {s.metrics.map((m, idx) => (
                          <div
                            class="metric-card rounded-2xl border border-white/10 bg-white/5 backdrop-blur-md px-4 py-3 lg:px-5 lg:py-4 text-white shadow-md"
                            style={`animation-delay: ${idx * 100}ms`}
                          >
                            <div class="flex items-center gap-3">
                              <span class={`inline-flex h-9 w-9 items-center justify-center rounded-md ${m.color ?? "bg-white/10"}`}>
                                <i class={`${m.icon ?? "fa-solid fa-circle"}`}></i>
                              </span>
                              <div>
                                <div class="text-2xl lg:text-3xl font-extrabold leading-none">{m.value}</div>
                                <div class="text-xs lg:text-sm text-white/80">{m.label}</div>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </aside>
                  )}
                </div>
              </div>
            );
          }

          //  Slide 1 (u otros) normal
          return (
            <div class={`relative z-20 flex h-full items-center justify-center px-8 md:px-16 lg:px-24 ${padEdge}`}>
              <div class={`flex w-full items-center gap-8 lg:gap-12
               ${isLeft ? "lg:justify-start" : isRight ? "lg:justify-end" : "lg:justify-center"}`}>
                <div class={`max-w-3xl text-white space-y-6 mx-auto text-center ${isLeft ? "lg:text-left lg:mx-0" : ""} ${isRight ? "lg:text-right lg:mx-0" : ""}`}>
                  {s.eyebrow && (
                    <span class={`hero-eyebrow inline-block px-4 py-2 rounded-full text-sm ${s.eyebrowClass ?? ""}`}>
                      {s.eyebrow}
                    </span>
                  )}
                  <h1 class="hero-title text-4xl sm:text-5xl lg:text-6xl font-extrabold leading-tight">
                    {s.title1}{" "}
                    <span class="bg-gradient-to-r from-orange-500 to-orange-400 bg-clip-text text-transparent">{s.title2}</span>
                  </h1>
                  <p class="hero-desc text-lg sm:text-xl text-white/90">{s.desc}</p>
                  {s.ctaText && (
                    <div class={`hero-cta flex flex-wrap gap-4 justify-center ${isLeft ? "lg:justify-start" : ""} ${isRight ? "lg:justify-end" : ""}`}>
                      <a href={s.ctaHref ?? "#"} class="btn-premium btn-premium-orange transition-smooth shadow-premium shadow-premium-hover">{s.ctaText}</a>
                      <a href="/servicios" class="btn-premium btn-premium-white transition-smooth shadow-premium shadow-premium-hover">Explorar Servicios</a>
                    </div>
                  )}
                </div>
                {s.metrics && (
                  <aside class="hero-metrics hidden md:block">
                    <div class="grid grid-cols-2 gap-3 lg:gap-4 w-[min(36rem,40vw)]">
                      {s.metrics.map((m, idx) => (
                        <div class="metric-card rounded-2xl border border-white/10 bg-white/5 backdrop-blur-md px-4 py-3 lg:px-5 lg:py-4 text-white shadow-md" style={`animation-delay: ${idx * 100}ms`}>
                          <div class="flex items-center gap-3">
                            <span class={`inline-flex h-9 w-9 items-center justify-center rounded-md ${m.color ?? "bg-white/10"}`}>
                              <i class={`${m.icon ?? "fa-solid fa-circle"}`}></i>
                            </span>
                            <div>
                              <div class="text-2xl lg:text-3xl font-extrabold leading-none">{m.value}</div>
                              <div class="text-xs lg:text-sm text-white/80">{m.label}</div>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </aside>
                )}
              </div>
            </div>
          );
        })()}
      </article>
    ))}
  </div>

  <!-- Controles de navegaci√≥n -->
  <button
    id="prev-btn"
    class="hidden md:flex absolute left-8 top-1/2 -translate-y-1/2 z-30 w-14 h-14 bg-black/50 backdrop-blur-sm border border-white/10 rounded-full items-center justify-center text-white hover:bg-black/70 hover:border-emerald-500 hover:scale-110 transition-all duration-300 group"
    aria-label="Slide anterior"
  >
    <svg class="w-6 h-6 transition-colors group-hover:text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
    </svg>
  </button>

  <button
    id="next-btn"
    class="hidden md:flex absolute right-8 top-1/2 -translate-y-1/2 z-30 w-14 h-14 bg-black/50 backdrop-blur-sm border border-white/10 rounded-full items-center justify-center text-white hover:bg-black/70 hover:border-emerald-500 hover:scale-110 transition-all duration-300 group"
    aria-label="Slide siguiente"
  >
    <svg class="w-6 h-6 transition-colors group-hover:text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
    </svg>
  </button>

  <!-- Indicadores -->
  <div class="z-40 absolute bottom-20 left-1/2 -translate-x-1/2 flex gap-3">
    {slides.map((_, i) => (
      <button
        type="button"
        class={`hero-indicator h-2 rounded-full transition-all duration-300 ${i === 0 ? "w-12 bg-orange-500" : "w-8 bg-white/50 hover:bg-white/80"}`}
        data-goto={i}
        aria-label={`Ir al slide ${i + 1}`}
        aria-current={i === 0 ? "true" : "false"}
      />
    ))}
  </div>

  <!-- Barra de progreso -->
  <div class="absolute bottom-0 left-0 w-full h-1 bg-black/50 z-30">
    <div 
      id="progress-bar" 
      class="h-full bg-gradient-to-r from-orange-500 via-orange-400 to-emerald-500"
      style="width: 0%; transform-origin: left center;"
    ></div>
  </div>
</section>
  


<style>
  /* Animaciones para contenido del slide */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-40px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(40px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes metricPop {
    0% {
      opacity: 0;
      transform: scale(0.8) translateY(20px);
    }
    100% {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }
  @keyframes shimmer {
  0% { background-position: -200% center; }
  100% { background-position: 200% center; }
}

  .hero-slide.is-active .metric-card:hover {
    border-color: rgba(16, 185, 129, 0.4);
    background: linear-gradient(135deg, rgba(255,255,255,0.08) 0%, rgba(255,255,255,0.02) 100%);
    transform: translateY(-4px) scale(1.02);
    transition: all 0.3s ease;
  }

  .hero-slide.is-active .metric-card .text-3xl {
    background: linear-gradient(
      90deg,
      #10b981 0%,
      #f97316 25%,
      #10b981 50%,
      #f97316 75%,
      #10b981 100%
    );
    background-size: 200% auto;
    background-clip: text;
    -webkit-background-clip: text;
    animation: shimmer 12s linear infinite;
  }

  /* Slide activo: Ken Burns suave en la imagen */
  .hero-slide.is-active img {
    animation: kenBurns 12s ease-out forwards;
  }

  @keyframes kenBurns {
    from { transform: scale(1.1); }
    to { transform: scale(1); }
  }

  /* Animaciones de contenido cuando el slide est√° activo */
  .hero-slide.is-active .hero-eyebrow {
    animation: fadeIn 0.8s ease-out 0.2s backwards;
  }

  .hero-slide.is-active .hero-title {
    animation: fadeInUp 1s ease-out 0.4s backwards;
  }

  .hero-slide.is-active .hero-desc {
    animation: fadeInUp 1s ease-out 0.6s backwards;
  }

  .hero-slide.is-active .hero-cta {
    animation: fadeInUp 1s ease-out 0.8s backwards;
  }

  .hero-slide.is-active .hero-metrics {
    animation: slideInRight 1s ease-out 0.5s backwards;
  }

  .hero-slide.is-active .metric-card {
    animation: metricPop 0.6s ease-out backwards;
  }

  /* Efecto flotante sutil en los CTAs */
  .hero-slide.is-active .hero-cta a {
    animation: float 3s ease-in-out infinite;
  }

  .hero-slide.is-active .hero-cta a:nth-child(2) {
    animation-delay: 0.5s;
  }

  /* Transiciones suaves */
  .hero-slide {
    transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1),
                z-index 0s 1s;
  }

  .hero-slide.is-active {
    transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1),
                z-index 0s 0s;
  }

  /* Indicadores mejorados */
  .hero-indicator {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hero-indicator:hover {
    transform: scale(1.1);
  }

  /* Reducir movimiento para accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .hero-slide,
    .hero-slide img,
    .hero-eyebrow,
    .hero-title,
    .hero-desc,
    .hero-cta,
    .hero-metrics,
    .metric-card,
    .hero-indicator {
      animation: none !important;
      transition: opacity 0.3s ease !important;
    }
  }
  .hero-slide.is-active .hero-contact-form {
  animation: fadeInUp 1s ease-out 0.8s backwards;
}

.hero-slide.is-active .form-group {
  animation: fadeInUp 0.6s ease-out backwards;
}

.hero-slide.is-active .form-group:nth-child(1) { animation-delay: 0.9s; }
.hero-slide.is-active .form-group:nth-child(2) { animation-delay: 1s; }
.hero-slide.is-active .form-group:nth-child(3) { animation-delay: 1.1s; }
.hero-slide.is-active .form-group:nth-child(4) { animation-delay: 1.2s; }

/* Efecto glassmorphism mejorado */
.hero-contact-form form {
  background: linear-gradient(135deg, rgba(255,255,255,0.12) 0%, rgba(255,255,255,0.06) 100%);
  box-shadow: 0 8px 32px rgba(0,0,0,0.3), inset 0 1px 0 rgba(255,255,255,0.2);
}

.hero-contact-form input:focus,
.hero-contact-form textarea:focus {
  background: rgba(255,255,255,0.15);
  transform: translateY(-2px);
}

.hero-contact-form button:hover {
  box-shadow: 0 20px 40px rgba(249,115,22,0.4), 0 10px 20px rgba(16,185,129,0.3);
}
</style>

<script define:vars={{ totalSlides: slides.length }}>
  let currentIndex = 0;
  let isTransitioning = false;
  let autoplayTimer = null;
  let progressTimer = null;
  const AUTOPLAY_DURATION = 6000;

  function updateSlides(nextIndex) {
    if (isTransitioning) return;
    isTransitioning = true;

    const slides = document.querySelectorAll('.hero-slide');
    const indicators = document.querySelectorAll('.hero-indicator');
    
    // Ocultar slide actual
    slides[currentIndex]?.classList.remove('is-active', 'opacity-100', 'z-10');
    slides[currentIndex]?.classList.add('opacity-0', 'z-0');
    
    // Mostrar nuevo slide
    slides[nextIndex]?.classList.add('is-active', 'opacity-100', 'z-10');
    slides[nextIndex]?.classList.remove('opacity-0', 'z-0');
    
    // Actualizar indicadores
    indicators.forEach((indicator, idx) => {
      const isActive = idx === nextIndex;
      indicator.classList.toggle('w-12', isActive);
      indicator.classList.toggle('bg-orange-500', isActive);
      indicator.classList.toggle('w-8', !isActive);
      indicator.classList.toggle('bg-white/50', !isActive);
      indicator.setAttribute('aria-current', isActive ? 'true' : 'false');
    });
    
    currentIndex = nextIndex;
    
    setTimeout(() => {
      isTransitioning = false;
    }, 1000);
    
    animateProgressBar();
  }

  function nextSlide() {
    const nextIndex = (currentIndex + 1) % totalSlides;
    updateSlides(nextIndex);
  }

  function prevSlide() {
    const nextIndex = (currentIndex - 1 + totalSlides) % totalSlides;
    updateSlides(nextIndex);
  }

  function goToSlide(index) {
    if (index !== currentIndex) {
      updateSlides(index);
    }
  }

  function animateProgressBar() {
    const progressBar = document.getElementById('progress-bar');
    if (!progressBar) return;
    
    // Resetear barra
    progressBar.style.transition = 'none';
    progressBar.style.width = '0%';
    
    // Forzar reflow
    void progressBar.offsetWidth;
    
    // Animar
    progressBar.style.transition = `width ${AUTOPLAY_DURATION}ms linear`;
    progressBar.style.width = '100%';
  }

  function startAutoplay() {
    stopAutoplay();
    animateProgressBar();
    
    autoplayTimer = setInterval(() => {
      nextSlide();
    }, AUTOPLAY_DURATION);
  }

  function stopAutoplay() {
    if (autoplayTimer) {
      clearInterval(autoplayTimer);
      autoplayTimer = null;
    }
    
    const progressBar = document.getElementById('progress-bar');
    if (progressBar) {
      const currentWidth = progressBar.getBoundingClientRect().width;
      progressBar.style.transition = 'none';
      progressBar.style.width = `${currentWidth}px`;
    }
  }

  // Inicializar
  document.addEventListener('DOMContentLoaded', () => {
    const hero = document.getElementById('hero');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const indicators = document.querySelectorAll('.hero-indicator');

    // Botones de navegaci√≥n
    prevBtn?.addEventListener('click', () => {
      prevSlide();
      stopAutoplay();
      setTimeout(startAutoplay, 100);
    });

    nextBtn?.addEventListener('click', () => {
      nextSlide();
      stopAutoplay();
      setTimeout(startAutoplay, 100);
    });

    // Indicadores
    indicators.forEach((indicator) => {
      indicator.addEventListener('click', (e) => {
        const index = parseInt(e.currentTarget.dataset.goto);
        if (!isNaN(index)) {
          goToSlide(index);
          stopAutoplay();
          setTimeout(startAutoplay, 100);
        }
      });
    });

    // Pausar en hover
    hero?.addEventListener('mouseenter', stopAutoplay);
    hero?.addEventListener('mouseleave', startAutoplay);

    // Teclado
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowRight') {
        e.preventDefault();
        nextSlide();
        stopAutoplay();
        setTimeout(startAutoplay, 100);
      } else if (e.key === 'ArrowLeft') {
        e.preventDefault();
        prevSlide();
        stopAutoplay();
        setTimeout(startAutoplay, 100);
      }
    });

    // Iniciar autoplay
    startAutoplay();
  });
</script>